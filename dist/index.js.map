{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;AAAA,2CAAyD;AAEzD,4CAAoB;AACpB,gDAAwB;AACxB,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;AAE3B,MAAM,MAAM,GAAG,IAAI,mBAAM,CAAC,EAAE,OAAO,EAAE,CAAC,oBAAO,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AAElD,QAAA,QAAQ,GAGjB,IAAI,uBAAU,EAAE,CAAC;AAErB,YAAY;AACZ,MAAM,UAAU,GAAG,YAAE;KAClB,WAAW,CAAC,cAAI,CAAC,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;KAC/C,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AAEnF,KAAK,MAAM,IAAI,IAAI,UAAU,EAAE;IAC7B,MAAM,KAAK,GAAG,OAAO,CAAC,YAAY,IAAI,EAAE,CAAC,CAAC;IAC1C,IAAI,KAAK,CAAC,IAAI,EAAE;QACd,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;KAC9D;SAAM;QACL,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE;YAChC,KAAK,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;KACJ;CACF;AAED,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC","sourcesContent":["import { Client, Collection, Intents } from \"discord.js\";\r\nimport { SlashCommandBuilder } from \"@discordjs/builders\";\r\nimport fs from \"fs\";\r\nimport path from \"path\";\r\nrequire(\"dotenv\").config();\r\n\r\nconst client = new Client({ intents: [Intents.FLAGS.GUILDS] });\r\n\r\nexport const commands: Collection<\r\n  string,\r\n  { execute: Function; data: SlashCommandBuilder }\r\n> = new Collection();\r\n\r\n// try catch\r\nconst eventFiles = fs\r\n  .readdirSync(path.resolve(__dirname, \"events/\"))\r\n  .filter((file) => file.endsWith(process.env.NODE_ENV === \"dev\" ? \".ts\" : \".js\"));\r\n\r\nfor (const file of eventFiles) {\r\n  const event = require(`./events/${file}`);\r\n  if (event.once) {\r\n    client.once(event.name, (...args) => event.execute(...args));\r\n  } else {\r\n    client.on(event.name, (...args) => {\r\n      event.execute(...args);\r\n    });\r\n  }\r\n}\r\n\r\nclient.login(process.env.TOKEN);\r\n"]}