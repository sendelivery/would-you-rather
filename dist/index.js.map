{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;AAAA,4CAAoB;AACpB,2CAA6E;AAE7E,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;AAM3B,MAAM,MAAM,GAAG,IAAI,mBAAM,CAAC,EAAE,OAAO,EAAE,CAAC,oBAAO,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AAElD,QAAA,QAAQ,GAAwE,IAAI,uBAAU,EAAE,CAAC;AAC9G,MAAM,YAAY,GAAG,YAAE;KACpB,WAAW,CAAC,gBAAgB,CAAC;KAC7B,MAAM,CAAC,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;AAElD,KAAK,MAAM,IAAI,IAAI,YAAY,EAAE;IAC/B,MAAM,OAAO,GAAG,OAAO,CAAC,cAAc,IAAI,EAAE,CAAC,CAAC;IAC9C,gBAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;CAC1C;AAED,MAAM,UAAU,GAAG,YAAE;KAClB,WAAW,CAAC,cAAc,CAAC;KAC3B,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;AAE1C,KAAK,MAAM,IAAI,IAAI,UAAU,EAAE;IAC7B,MAAM,KAAK,GAAG,OAAO,CAAC,YAAY,IAAI,EAAE,CAAC,CAAC;IAC1C,IAAI,KAAK,CAAC,IAAI,EAAE;QACd,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;KAC9D;SAAM;QACL,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE;YAChC,KAAK,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;KACJ;CACF;AAED,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC","sourcesContent":["import fs from \"fs\";\r\nimport { Client, Collection, CommandInteraction, Intents } from \"discord.js\";\r\nimport { SlashCommandBuilder } from \"@discordjs/builders\";\r\nrequire(\"dotenv\").config();\r\n\r\ninterface ICommand {\r\n\r\n}\r\n\r\nconst client = new Client({ intents: [Intents.FLAGS.GUILDS] });\r\n\r\nexport const commands: Collection<string, { execute: Function, data: SlashCommandBuilder}> = new Collection();\r\nconst commandFiles = fs\r\n  .readdirSync(\"./src/commands\")\r\n  .filter((file: string) => file.endsWith(\".js\"));\r\n\r\nfor (const file of commandFiles) {\r\n  const command = require(`./commands/${file}`);\r\n  commands.set(command.data.name, command);\r\n}\r\n\r\nconst eventFiles = fs\r\n  .readdirSync(\"./src/events\")\r\n  .filter((file) => file.endsWith(\".js\"));\r\n\r\nfor (const file of eventFiles) {\r\n  const event = require(`./events/${file}`);\r\n  if (event.once) {\r\n    client.once(event.name, (...args) => event.execute(...args));\r\n  } else {\r\n    client.on(event.name, (...args) => {\r\n      event.execute(...args);\r\n    });\r\n  }\r\n}\r\n\r\nclient.login(process.env.TOKEN);\r\n"]}